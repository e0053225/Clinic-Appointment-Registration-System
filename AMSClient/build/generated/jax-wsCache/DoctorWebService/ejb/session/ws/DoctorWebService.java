
package ejb.session.ws;

import java.util.List;
import javax.jws.Oneway;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.11-b150120.1832
 * Generated source version: 2.2
 * 
 */
@WebService(name = "DoctorWebService", targetNamespace = "http://ws.session.ejb/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface DoctorWebService {


    /**
     * 
     * @param doctorId
     * @param appointmentId
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "addAppointmentToDoctor", targetNamespace = "http://ws.session.ejb/", className = "ejb.session.ws.AddAppointmentToDoctor")
    @Action(input = "http://ws.session.ejb/DoctorWebService/addAppointmentToDoctor")
    public void addAppointmentToDoctor(
        @WebParam(name = "doctorId", targetNamespace = "")
        Long doctorId,
        @WebParam(name = "appointmentId", targetNamespace = "")
        Long appointmentId);

    /**
     * 
     * @param doctorId
     * @throws DoctorNotFoundException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "deleteDoctor", targetNamespace = "http://ws.session.ejb/", className = "ejb.session.ws.DeleteDoctor")
    @ResponseWrapper(localName = "deleteDoctorResponse", targetNamespace = "http://ws.session.ejb/", className = "ejb.session.ws.DeleteDoctorResponse")
    @Action(input = "http://ws.session.ejb/DoctorWebService/deleteDoctorRequest", output = "http://ws.session.ejb/DoctorWebService/deleteDoctorResponse", fault = {
        @FaultAction(className = DoctorNotFoundException_Exception.class, value = "http://ws.session.ejb/DoctorWebService/deleteDoctor/Fault/DoctorNotFoundException")
    })
    public void deleteDoctor(
        @WebParam(name = "doctorId", targetNamespace = "")
        Long doctorId)
        throws DoctorNotFoundException_Exception
    ;

    /**
     * 
     * @param doctorEntity
     * @return
     *     returns ejb.session.ws.DoctorEntity
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createNewDoctor", targetNamespace = "http://ws.session.ejb/", className = "ejb.session.ws.CreateNewDoctor")
    @ResponseWrapper(localName = "createNewDoctorResponse", targetNamespace = "http://ws.session.ejb/", className = "ejb.session.ws.CreateNewDoctorResponse")
    @Action(input = "http://ws.session.ejb/DoctorWebService/createNewDoctorRequest", output = "http://ws.session.ejb/DoctorWebService/createNewDoctorResponse")
    public DoctorEntity createNewDoctor(
        @WebParam(name = "doctorEntity", targetNamespace = "")
        DoctorEntity doctorEntity);

    /**
     * 
     * @param doctorEntity
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "updateDoctor", targetNamespace = "http://ws.session.ejb/", className = "ejb.session.ws.UpdateDoctor")
    @Action(input = "http://ws.session.ejb/DoctorWebService/updateDoctor")
    public void updateDoctor(
        @WebParam(name = "doctorEntity", targetNamespace = "")
        DoctorEntity doctorEntity);

    /**
     * 
     * @param patientId
     * @param doctorId
     * @param appointmentId
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "deleteAppointment", targetNamespace = "http://ws.session.ejb/", className = "ejb.session.ws.DeleteAppointment")
    @Action(input = "http://ws.session.ejb/DoctorWebService/deleteAppointment")
    public void deleteAppointment(
        @WebParam(name = "appointmentId", targetNamespace = "")
        Long appointmentId,
        @WebParam(name = "patientId", targetNamespace = "")
        Long patientId,
        @WebParam(name = "doctorId", targetNamespace = "")
        Long doctorId);

    /**
     * 
     * @param doctorId
     * @return
     *     returns ejb.session.ws.DoctorEntity
     * @throws DoctorNotFoundException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "retrieveDoctorByDoctorId", targetNamespace = "http://ws.session.ejb/", className = "ejb.session.ws.RetrieveDoctorByDoctorId")
    @ResponseWrapper(localName = "retrieveDoctorByDoctorIdResponse", targetNamespace = "http://ws.session.ejb/", className = "ejb.session.ws.RetrieveDoctorByDoctorIdResponse")
    @Action(input = "http://ws.session.ejb/DoctorWebService/retrieveDoctorByDoctorIdRequest", output = "http://ws.session.ejb/DoctorWebService/retrieveDoctorByDoctorIdResponse", fault = {
        @FaultAction(className = DoctorNotFoundException_Exception.class, value = "http://ws.session.ejb/DoctorWebService/retrieveDoctorByDoctorId/Fault/DoctorNotFoundException")
    })
    public DoctorEntity retrieveDoctorByDoctorId(
        @WebParam(name = "doctorId", targetNamespace = "")
        Long doctorId)
        throws DoctorNotFoundException_Exception
    ;

    /**
     * 
     * @return
     *     returns java.util.List<ejb.session.ws.DoctorEntity>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "retrieveAllDoctors", targetNamespace = "http://ws.session.ejb/", className = "ejb.session.ws.RetrieveAllDoctors")
    @ResponseWrapper(localName = "retrieveAllDoctorsResponse", targetNamespace = "http://ws.session.ejb/", className = "ejb.session.ws.RetrieveAllDoctorsResponse")
    @Action(input = "http://ws.session.ejb/DoctorWebService/retrieveAllDoctorsRequest", output = "http://ws.session.ejb/DoctorWebService/retrieveAllDoctorsResponse")
    public List<DoctorEntity> retrieveAllDoctors();

}
